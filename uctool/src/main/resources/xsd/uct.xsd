<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://uctool.sf.net/" xmlns:uct="http://uctool.sf.net/"
	xmlns:html="http://www.w3.org/1999/xhtml">
	<!-- root element -->
	<xs:element name="uct">
		<xs:annotation>
			<xs:documentation>Root element of Use Case Tool configuration file.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="uct:term" />
				<xs:element ref="uct:requirement" />
				<xs:element ref="uct:uc-group" />
				<xs:element ref="uct:actor" />
				<xs:element ref="uct:data" />
				<xs:element ref="uct:attachment-group" />
			</xs:choice>
		</xs:complexType>
	</xs:element>
	<!-- use cases -->
	<xs:element name="uc-group">
		<xs:annotation>
			<xs:documentation>Group of use cases. Defines common attributes of the use cases included in the group.
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="uct:use-case" minOccurs="0" maxOccurs="unbounded" />
			</xs:sequence>
			<xs:attribute name="primary-actor" use="required" type="uct:CodeType">
				<xs:annotation>
					<xs:documentation>Code of the primary actor. Primary actor for the use cases nested below.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="type">
				<xs:annotation>
					<xs:documentation>Type of use cases in the group.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="system" />
						<xs:enumeration value="organization" />
						<xs:enumeration value="design" />
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="visibility">
				<xs:annotation>
					<xs:documentation>Visibility of use cases in the group.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="black" />
						<xs:enumeration value="white" />
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="scope" type="xs:string">
				<xs:annotation>
					<xs:documentation>Scope of use cases in the group.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="use-case">
		<xs:annotation>
			<xs:documentation>Use case.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="uct:description" minOccurs="0" maxOccurs="unbounded" />
				<xs:element ref="uct:stakeholders-interests" minOccurs="0" />
				<xs:element ref="uct:preconditions" minOccurs="0" />
				<xs:element ref="uct:minimal-guarantees" minOccurs="0" />
				<xs:element ref="uct:success-guarantees" minOccurs="0" />
				<xs:element ref="uct:trigger" minOccurs="0" />
				<xs:element ref="uct:success" minOccurs="0" />
				<xs:element ref="uct:extensions" minOccurs="0" />
				<xs:element ref="uct:notes" minOccurs="0" />
			</xs:sequence>
			<xs:attribute name="code" use="required" type="uct:CodeType">
				<xs:annotation>
					<xs:documentation>Code of the use case. Uniquely identifies the use case.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="refcode" type="uct:CodeType">
				<xs:annotation>
					<xs:documentation>Reference code of the use case. When defined, uniquely identifies the use case in all use case
						references.
					</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="goal" use="required" type="uct:NameType">
				<xs:annotation>
					<xs:documentation>Goal of the use case. Unique in the system. Identifies the action taken by the primary actor.
					</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="level" type="uct:LevelType">
				<xs:annotation>
					<xs:documentation>Level of the use case.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="preconditions" type="uct:ItemsType">
		<xs:annotation>
			<xs:documentation>Preconditions for running the use case. What is sure to be true, when the use case executes.
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="minimal-guarantees" type="uct:ItemsType">
		<xs:annotation>
			<xs:documentation>Minimal guarantees of the use case. What must always be true, when the use case ends.
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="success-guarantees" type="uct:ItemsType">
		<xs:annotation>
			<xs:documentation>Success guarantees of the use case. What must be true, when the use case passes the main success
				scenario.
			</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="trigger">
		<xs:annotation>
			<xs:documentation>Trigger of the use case.</xs:documentation>
		</xs:annotation>
		<xs:simpleType>
			<xs:restriction base="xs:string" />
		</xs:simpleType>
	</xs:element>
	<xs:element name="success">
		<xs:annotation>
			<xs:documentation>The main success scenario.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="uct:step" maxOccurs="unbounded" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="step">
		<xs:annotation>
			<xs:documentation>Step of a use case.</xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:any namespace="http://www.w3.org/1999/xhtml" processContents="skip" />
				<xs:element ref="uct:step-ref" />
				<xs:element ref="uct:uc-ref" />
				<xs:element ref="uct:data-ref" />
				<xs:element ref="uct:req-ref" />
				<xs:element ref="uct:attachment-ref" />
			</xs:choice>
			<xs:attribute name="handle" type="uct:HandleType">
				<xs:annotation>
					<xs:documentation>Handle to the step. Used to reference the step.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="step-ref">
		<xs:annotation>
			<xs:documentation>Reference to a step within use case.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:attribute name="handle" type="uct:StepRefType" use="required">
				<xs:annotation>
					<xs:documentation>Handle of the referenced step.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="uc-ref">
		<xs:annotation>
			<xs:documentation>Reference to a use case.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:string">
					<xs:attribute name="code" type="uct:CodeType" use="required">
						<xs:annotation>
							<xs:documentation>Code of the referenced use case.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="extensions">
		<xs:annotation>
			<xs:documentation>Use case extensions.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="uct:condition" maxOccurs="unbounded" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="condition">
		<xs:annotation>
			<xs:documentation>Extension condition.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="uct:when" minOccurs="0" />
				<xs:choice minOccurs="0" maxOccurs="unbounded">
					<xs:element ref="uct:step" />
					<xs:element ref="uct:step-extensions" />
				</xs:choice>
			</xs:sequence>
			<xs:attribute name="when" type="xs:string">
				<xs:annotation>
					<xs:documentation>When the condition applies. The condition itself.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="step-ref" type="uct:StepRefType" use="required">
				<xs:annotation>
					<xs:documentation>Reference to step(s) which this condition extends.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="inline-step" type="xs:string">
				<xs:annotation>
					<xs:documentation>Inline step of the condition.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="when">
		<xs:annotation>
			<xs:documentation>When the condition applies. The condition itself.</xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:any namespace="http://www.w3.org/1999/xhtml" processContents="skip" />
				<xs:element ref="uct:step-ref" />
				<xs:element ref="uct:data-ref" />
				<xs:element ref="uct:req-ref" />
				<xs:element ref="uct:attachment-ref" />
			</xs:choice>
		</xs:complexType>
	</xs:element>
	<xs:element name="step-extensions">
		<xs:annotation>
			<xs:documentation>Step extensions.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="uct:step-condition" maxOccurs="unbounded" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="step-condition">
		<xs:annotation>
			<xs:documentation>Step extension condition.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="uct:when" minOccurs="0" />
				<xs:choice minOccurs="0" maxOccurs="unbounded">
					<xs:element ref="uct:step" />
					<xs:element ref="uct:step-extensions" />
				</xs:choice>
			</xs:sequence>
			<xs:attribute name="when" type="xs:string">
				<xs:annotation>
					<xs:documentation>When the condition applies. The condition itself.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="inline-step" type="xs:string">
				<xs:annotation>
					<xs:documentation>Inline step of the condition.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="stakeholders-interests">
		<xs:annotation>
			<xs:documentation>Stakeholders' interests in the use case.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="uct:interest" minOccurs="0" maxOccurs="unbounded" />
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="interest">
		<xs:annotation>
			<xs:documentation>Interest of a stakeholder in the use case.</xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:any namespace="http://www.w3.org/1999/xhtml" processContents="skip" />
				<xs:element ref="uct:step-ref" />
				<xs:element ref="uct:uc-ref" />
				<xs:element ref="uct:data-ref" />
				<xs:element ref="uct:req-ref" />
				<xs:element ref="uct:attachment-ref" />
			</xs:choice>
			<xs:attribute name="stakeholder" type="xs:string" use="required">
				<xs:annotation>
					<xs:documentation>Stakeholder of the interest.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<!-- actors -->
	<xs:element name="actor">
		<xs:annotation>
			<xs:documentation>Definition of actor.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="uct:description" minOccurs="0" maxOccurs="unbounded" />
				<xs:element ref="uct:extends-actor" minOccurs="0" maxOccurs="unbounded" />
			</xs:sequence>
			<xs:attribute name="code" use="required" type="uct:CodeType">
				<xs:annotation>
					<xs:documentation>Code of the actor.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="name" use="required" type="xs:string">
				<xs:annotation>
					<xs:documentation>Name of the actor.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="extends-actor">
		<xs:annotation>
			<xs:documentation>Reference to an actor which is extended by the current actor.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:attribute name="code" use="required" type="uct:CodeType">
				<xs:annotation>
					<xs:documentation>Code of the extended actor.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<!-- data structures -->
	<xs:element name="data">
		<xs:annotation>
			<xs:documentation>Data structure definition.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="uct:description" minOccurs="0" maxOccurs="unbounded" />
				<xs:choice minOccurs="0" maxOccurs="unbounded">
					<xs:element ref="uct:attribute" />
					<xs:element ref="uct:attribute-ref" />
				</xs:choice>
			</xs:sequence>
			<xs:attribute name="code" use="required" type="uct:CodeType">
				<xs:annotation>
					<xs:documentation>Code of the data structure.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="name" use="required" type="xs:string">
				<xs:annotation>
					<xs:documentation>Name of the data structure.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="category">
				<xs:annotation>
					<xs:documentation>Category of the data structure.</xs:documentation>
					<xs:documentation>persistence-entity - Persistence layer. Generic business entity.</xs:documentation>
					<xs:documentation>persistence-code-table - Persistence layer. Code table, user-maintained list of values.
					</xs:documentation>
					<xs:documentation>persistence-enumeration - Persistence layer. Enumeration, list of values fixed in the system.
					</xs:documentation>
					<xs:documentation>ui-list - UI layer. A list panel, grid, table containing multiple instances of an entity.
					</xs:documentation>
					<xs:documentation>ui-form - UI layer. A form panel, detail, set of fields containing single instance of an entity.
					</xs:documentation>
					<xs:documentation>interface - Interface with other system.</xs:documentation>
					<xs:documentation>interface-request - Request on interface with other system.</xs:documentation>
					<xs:documentation>interface-response - Response on interface with other system.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="persistence-entity" />
						<xs:enumeration value="persistence-code-table" />
						<xs:enumeration value="persistence-enumeration" />
						<xs:enumeration value="ui-list" />
						<xs:enumeration value="ui-form" />
						<xs:enumeration value="interface" />
						<xs:enumeration value="interface-request" />
						<xs:enumeration value="interface-response" />
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="expand" type="xs:boolean">
				<xs:annotation>
					<xs:documentation>Set to true on data structures that group attributes for re-use in multiple other data
						structures.
					</xs:documentation>
					<xs:documentation>When set, the attributes are expanded in the other data structures, on which this one is used.
					</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="attribute">
		<xs:annotation>
			<xs:documentation>Attribute of data structure.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:attribute name="name" use="required" type="xs:string">
				<xs:annotation>
					<xs:documentation>Name of the attribute.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="code" type="uct:CodeType">
				<xs:annotation>
					<xs:documentation>Code of the attribute.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="status">
				<xs:annotation>
					<xs:documentation>Status of the attribute.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="display-only" />
						<xs:enumeration value="optional" />
						<xs:enumeration value="conditional" />
						<xs:enumeration value="mandatory" />
						<xs:enumeration value="unique" />
						<xs:enumeration value="natural-key" />
						<xs:enumeration value="primary-key" />
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="type">
				<xs:annotation>
					<xs:documentation>The data type of the attribute. Either a simple type (one of enumerated options) or code of a
						data structure (represents relation to that structure).
					</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:union>
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="string" />
								<xs:enumeration value="integer" />
								<xs:enumeration value="float" />
								<xs:enumeration value="decimal" />
								<xs:enumeration value="boolean" />
								<xs:enumeration value="date" />
								<xs:enumeration value="time" />
								<xs:enumeration value="date-time" />
								<xs:enumeration value="timestamp" />
								<xs:enumeration value="binary" />
							</xs:restriction>
						</xs:simpleType>
						<xs:simpleType>
							<xs:restriction base="uct:CodeType" />
						</xs:simpleType>
					</xs:union>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="length">
				<xs:annotation>
					<xs:documentation>Length of the attribute.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="collection" type="xs:boolean">
				<xs:annotation>
					<xs:documentation>Marks attribute with collection value. The data type indicated can be held in multiple instances
						in the value of the attribute.
					</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="description">
				<xs:annotation>
					<xs:documentation>Simple description of the attribute.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="attribute-ref">
		<xs:annotation>
			<xs:documentation>Data structure attribute reference. Refers to an attribute defined on another data structure. Takes
				over the properties of the referred attribute as defaults (with the exception of type and collection, which cannot
				be overridden).
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:attribute name="type" type="uct:AttributeRefCodeType" use="required">
				<xs:annotation>
					<xs:documentation>Reference to the attribute. Has the form "[data-code].[attribute-code]", where [data-code] is the
						code of data structure defining the referred attribute and [attribute-code] is the code of the referred attribute
						within that data structure.
					</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="name" type="xs:string">
				<xs:annotation>
					<xs:documentation>Name of the attribute. If not specified, defaults from referred attribute.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="code" type="uct:CodeType">
				<xs:annotation>
					<xs:documentation>Code of the attribute. If not specified, defaults from referred attribute.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="status">
				<xs:annotation>
					<xs:documentation>Status of the attribute. If not specified, defaults from referred attribute.</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="display-only" />
						<xs:enumeration value="optional" />
						<xs:enumeration value="conditional" />
						<xs:enumeration value="mandatory" />
						<xs:enumeration value="unique" />
						<xs:enumeration value="natural-key" />
						<xs:enumeration value="primary-key" />
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="length">
				<xs:annotation>
					<xs:documentation>Length of the attribute. If not specified, defaults from referred attribute.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="description">
				<xs:annotation>
					<xs:documentation>Simple description of the attribute. If not specified, defaults from referred attribute.
					</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="data-ref">
		<xs:annotation>
			<xs:documentation>Reference to a data structure.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:string">
					<xs:attribute name="code" type="uct:CodeType" use="required">
						<xs:annotation>
							<xs:documentation>Code of the referenced data structure.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<!-- terms -->
	<xs:element name="term">
		<xs:annotation>
			<xs:documentation>Definition of a glossary term.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="uct:description" minOccurs="0" />
			</xs:sequence>
			<xs:attribute name="name" use="required" type="xs:string">
				<xs:annotation>
					<xs:documentation>Name of the term defined.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="abbreviation" type="xs:string">
				<xs:annotation>
					<xs:documentation>Abbreviation of the term defined.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<!-- user requirements -->
	<xs:element name="requirement">
		<xs:annotation>
			<xs:documentation>User requirement definition.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="uct:description" minOccurs="0" />
			</xs:sequence>
			<xs:attribute name="code" use="required" type="uct:CodeType">
				<xs:annotation>
					<xs:documentation>Code of requirement. Uniquely identifies the requirement.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="name" use="required" type="xs:string">
				<xs:annotation>
					<xs:documentation>Requirement name.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="type" type="uct:RequirementTypeType">
				<xs:annotation>
					<xs:documentation>Requirement type.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="priority" type="uct:RequirementPriorityType">
				<xs:annotation>
					<xs:documentation>Requirement priority.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="status" type="uct:RequirementStatusType">
				<xs:annotation>
					<xs:documentation>Requirement status.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="origin" type="xs:string" default="">
				<xs:annotation>
					<xs:documentation>Origin of requirement, e.g. workshop, meeting, proposal, etc.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="level" type="uct:LevelType">
				<xs:annotation>
					<xs:documentation>Requirement level.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="area" type="xs:string">
				<xs:annotation>
					<xs:documentation>Area of the requirement.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="req-ref">
		<xs:annotation>
			<xs:documentation>Reference to a requirement.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:string">
					<xs:attribute name="code" type="uct:CodeType" use="required">
						<xs:annotation>
							<xs:documentation>Code of the referenced requirement.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<!-- attachments -->
	<xs:element name="attachment-group">
		<xs:annotation>
			<xs:documentation>Group of attachments. Allows to arrange attached documents and figures into groups. A group
				corresponds to a subdirectory that contains the attachment files.
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="uct:attachment" minOccurs="0" maxOccurs="unbounded" />
			</xs:sequence>
			<xs:attribute name="directory" use="required" type="uct:CodeType">
				<xs:annotation>
					<xs:documentation>Directory of the attachment group. Defines a subdirectory of the main attachments directory, that
						contains the files of the attachments included in the group. The main attachments directory is by default
						src/main/attachments.
					</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="name" use="required" type="xs:string">
				<xs:annotation>
					<xs:documentation>Name of the attachment group. The name is displayed as a group title in generated documentation.
					</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="attachment">
		<xs:annotation>
			<xs:documentation>Attachment file definition. Attachment is typically a diagram, figure, or document attached to the
				analytical documentation.
			</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:attribute name="code" use="required" type="uct:CodeType">
				<xs:annotation>
					<xs:documentation>Code of attachment. Uniquely identifies the attachment.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="name" use="required" type="xs:string">
				<xs:annotation>
					<xs:documentation>Attachment name.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="file-name" use="required" type="uct:FileNameType">
				<xs:annotation>
					<xs:documentation>Attachment file name. Name of the attachment file. The path is given by the directory defined on
						the attachment group containing the attachment.
					</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="attachment-ref">
		<xs:annotation>
			<xs:documentation>Reference to an attachment.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:string">
					<xs:attribute name="code" type="uct:CodeType" use="required">
						<xs:annotation>
							<xs:documentation>Code of the referenced attachment.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<!-- common, enumerations, miscellaneous -->
	<xs:element name="item" type="uct:TextType" />
	<xs:element name="description" type="uct:DescriptionType" />
	<xs:element name="notes" type="uct:DescriptionType" />
	<xs:element name="text" type="uct:TextType" />
	<xs:complexType name="ItemsType">
		<xs:choice minOccurs="1" maxOccurs="1">
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="uct:item" />
			</xs:choice>
			<xs:element ref="uct:text" />
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="DescriptionType" mixed="true">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:any namespace="http://www.w3.org/1999/xhtml" processContents="skip" />
			<xs:element ref="uct:data-ref" />
			<xs:element ref="uct:req-ref" />
			<xs:element ref="uct:attachment-ref" />
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="TextType" mixed="true">
		<xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:any namespace="http://www.w3.org/1999/xhtml" processContents="skip" />
			<xs:element ref="uct:step-ref" />
			<xs:element ref="uct:uc-ref" />
			<xs:element ref="uct:data-ref" />
			<xs:element ref="uct:req-ref" />
			<xs:element ref="uct:attachment-ref" />
		</xs:choice>
	</xs:complexType>
	<xs:simpleType name="HandleType">
		<xs:restriction base="xs:string">
			<xs:pattern value="[a-zA-Z0-9_]+" />
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="CodeType">
		<xs:restriction base="xs:string">
			<xs:pattern value="[a-zA-Z0-9_\-]+" />
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="FileNameType">
		<xs:restriction base="xs:string">
			<xs:pattern value="[a-zA-Z0-9\._\-]+" />
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="NameType">
		<xs:restriction base="xs:string">
			<xs:pattern value=".*[a-zA-Z0-9]+.*" />
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="StepRefType">
		<xs:restriction base="xs:string">
			<xs:pattern value="(\*)|([a-zA-Z0-9_]+(\-[a-zA-Z0-9_]+)?)" />
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="AttributeRefCodeType">
		<xs:restriction base="xs:string">
			<xs:pattern value="[a-zA-Z0-9_\-]+\.[a-zA-Z0-9_\-]+" />
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="RequirementPriorityType">
		<xs:annotation>
			<xs:documentation>Requirement priority.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="high" />
			<xs:enumeration value="normal" />
			<xs:enumeration value="low" />
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="RequirementStatusType">
		<xs:annotation>
			<xs:documentation>Requirement status enumeration.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="pending" />
			<xs:enumeration value="accepted" />
			<xs:enumeration value="canceled" />
			<xs:enumeration value="postponed" />
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="RequirementTypeType">
		<xs:annotation>
			<xs:documentation>Types of requirement enumeration.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="functional" />
			<xs:enumeration value="nonfunctional" />
			<xs:enumeration value="constraint" />
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="LevelType">
		<xs:annotation>
			<xs:documentation>Level enumeration.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="sea" />
			<xs:enumeration value="kite" />
			<xs:enumeration value="cloud" />
			<xs:enumeration value="fish" />
			<xs:enumeration value="clam" />
		</xs:restriction>
	</xs:simpleType>
</xs:schema>
